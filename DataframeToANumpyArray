https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_numpy.html
Syntax of Pandas Dataframe.to_numpy()
Syntax: Dataframe.to_numpy(dtype = None, copy = False) 

Parameters: 

dtype: Data type which we are passing like str. 
copy: [bool, default False] Ensures that the returned value is a not a view on another array.
Returns: numpy.ndarray

How to convert Dataframe to a Numpy array.
---------------------------------------------------

import pandas as pd
 
# initialize a dataframe
df = pd.DataFrame(
    [[1, 2, 3],
     [4, 5, 6],
    columns=['a', 'b', 'c'])
 
# convert dataframe to numpy array
arr = df.to_numpy()
 
print('\nNumpy Array\n----------\n', arr)
print(type(arr))


>
Numpy Array
----------
 [[ 1  2  3]
 [ 4  5  6]]
<class 'numpy.ndarray'>

--------------------------------------------------------

>>> pd.DataFrame({"A": [1, 2], "B": [3, 4]}).to_numpy()
array([[1, 3],
       [2, 4]])
       
--------------------------------------------------------

>>> df = pd.DataFrame({"A": [1, 2], "B": [3.0, 4.5]})
>>> df.to_numpy()
array([[1. , 3. ],
       [2. , 4.5]])

--------------------------------------------------------
#For a mix of numeric and non-numeric types, the output array will have object dtype.
>>> df['C'] = pd.date_range('2000', periods=2)
>>> df.to_numpy()
array([[1, 3.0, Timestamp('2000-01-01 00:00:00')],
       [2, 4.5, Timestamp('2000-01-02 00:00:00')]], dtype=object)

--------------------------------------------------------


